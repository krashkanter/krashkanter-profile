/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.3 public/models/character.glb -o src/components/Character.jsx -r public
*/
import type * as THREE from "three";
import { useAnimations, useGLTF } from "@react-three/drei";
import React, { useEffect, useRef } from "react";

import { CONSTANT } from "../../constants";

type CharacterProps = {
  animation: string;
  [key: string]: unknown;
};

export function Character({ animation, ...props }: CharacterProps) {
  const group = useRef<THREE.Group>(null!);
  const { nodes, materials, animations } = useGLTF(CONSTANT.ASSETS["3D"].RYOKU);
  const { actions } = useAnimations(animations, group);
  useEffect(() => {
    actions[animation]?.reset().fadeIn(0.24).play();
    return () => {
      actions?.[animation]?.fadeOut(0.24);
    };
  }, [actions, animation]);
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature" rotation={[Math.PI / 2, 0, 0]} scale={0.035}>
          <skinnedMesh
            name="Torso008"
            geometry={(nodes.Torso008 as THREE.SkinnedMesh).geometry}
            material={materials["Hood.001"]}
            skeleton={(nodes.Torso008 as THREE.SkinnedMesh).skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso012"
            geometry={(nodes.Torso012 as THREE.SkinnedMesh)?.geometry}
            material={materials["Eyes.001"]}
            skeleton={(nodes.Torso012 as THREE.SkinnedMesh).skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso015"
            geometry={(nodes.Torso015 as THREE.SkinnedMesh)?.geometry}
            material={materials["Shirt.001"]}
            skeleton={(nodes.Torso015 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso016"
            geometry={(nodes.Torso016 as THREE.SkinnedMesh)?.geometry}
            material={materials["Shirt.001"]}
            skeleton={(nodes.Torso016 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso024"
            geometry={(nodes.Torso024 as THREE.SkinnedMesh)?.geometry}
            material={materials["Boots.001"]}
            skeleton={(nodes.Torso024 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso025"
            geometry={(nodes.Torso025 as THREE.SkinnedMesh)?.geometry}
            material={materials["Pants.001"]}
            skeleton={(nodes.Torso025 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso026"
            geometry={(nodes.Torso026 as THREE.SkinnedMesh)?.geometry}
            material={materials["rai.001"]}
            skeleton={(nodes.Torso026 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso028"
            geometry={(nodes.Torso028 as THREE.SkinnedMesh)?.geometry}
            material={materials["Hands.001"]}
            skeleton={(nodes.Torso028 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />
          <skinnedMesh
            name="Torso029"
            geometry={(nodes.Torso029 as THREE.SkinnedMesh)?.geometry}
            material={materials["Fingers.001"]}
            skeleton={(nodes.Torso029 as THREE.SkinnedMesh)?.skeleton}
            castShadow
            receiveShadow
          />

          {nodes.mixamorigHips && <primitive object={nodes.mixamorigHips} />}
        </group>
      </group>
    </group>
  );
}

useGLTF.preload(CONSTANT.ASSETS["3D"].RYOKU);
